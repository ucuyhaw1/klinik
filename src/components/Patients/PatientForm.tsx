import React, { useState } from 'react';
import { X, Upload } from 'lucide-react';
import { Patient } from '../../types';
import Breadcrumb from '../Layout/Breadcrumb';

interface PatientFormProps {
  patient?: Patient;
  onSubmit: (patient: Omit<Patient, 'id'>) => void;
  onCancel: () => void;
  onNavigateToDashboard: () => void;
  onNavigateToPatients: () => void;
}

const PatientForm: React.FC<PatientFormProps> = ({ 
  patient, 
  onSubmit, 
  onCancel, 
  onNavigateToDashboard, 
  onNavigateToPatients 
}) => {
  const [formData, setFormData] = useState<Omit<Patient, 'id'>>({
    rekamMedik: patient?.rekamMedik || '', // Will be generated by database
    namaLengkap: patient?.namaLengkap || '',
    jenisIdentitas: patient?.jenisIdentitas || '',
    nomorIdentitas: patient?.nomorIdentitas || '',
    tempatLahir: patient?.tempatLahir || '',
    tanggalLahir: patient?.tanggalLahir || '',
    jenisKelamin: patient?.jenisKelamin || '',
    golonganDarah: patient?.golonganDarah || '',
    statusPerkawinan: patient?.statusPerkawinan || '',
    namaSuami: patient?.namaSuami || '',
    namaIbu: patient?.namaIbu || '',
    pendidikan: patient?.pendidikan || '',
    pekerjaan: patient?.pekerjaan || '',
    kewarganegaraan: patient?.kewarganegaraan || '',
    agama: patient?.agama || '',
    suku: patient?.suku || '',
    bahasa: patient?.bahasa || '',
    alamat: patient?.alamat || '',
    rt: patient?.rt || '',
    rw: patient?.rw || '',
    provinsi: patient?.provinsi || '',
    kabupaten: patient?.kabupaten || '',
    kecamatan: patient?.kecamatan || '',
    kelurahan: patient?.kelurahan || '',
    kodePos: patient?.kodePos || '',
    telepon: patient?.telepon || '',
    hubunganPenanggungJawab: patient?.hubunganPenanggungJawab || '',
    namaPenanggungJawab: patient?.namaPenanggungJawab || '',
    teleponPenanggungJawab: patient?.teleponPenanggungJawab || '',
    fotoRontgen: patient?.fotoRontgen || '',
    createdAt: patient?.createdAt || new Date().toISOString()
  });

  const [errors, setErrors] = useState<Record<string, string>>({});

  const validateForm = () => {
    const newErrors: Record<string, string> = {};

    // Required fields validation
    if (!formData.namaLengkap.trim()) newErrors.namaLengkap = 'Nama lengkap wajib diisi';
    if (!formData.jenisIdentitas) newErrors.jenisIdentitas = 'Jenis identitas wajib dipilih';
    if (!formData.nomorIdentitas.trim()) newErrors.nomorIdentitas = 'Nomor identitas wajib diisi';
    if (!formData.tempatLahir.trim()) newErrors.tempatLahir = 'Tempat lahir wajib diisi';
    if (!formData.tanggalLahir) newErrors.tanggalLahir = 'Tanggal lahir wajib diisi';
    if (!formData.jenisKelamin) newErrors.jenisKelamin = 'Jenis kelamin wajib dipilih';
    if (!formData.namaIbu.trim()) newErrors.namaIbu = 'Nama ibu wajib diisi';
    if (!formData.alamat.trim()) newErrors.alamat = 'Alamat wajib diisi';
    if (!formData.telepon.trim()) newErrors.telepon = 'Telepon wajib diisi';
    if (!formData.hubunganPenanggungJawab) newErrors.hubunganPenanggungJawab = 'Hubungan penanggung jawab wajib dipilih';
    if (!formData.namaPenanggungJawab.trim()) newErrors.namaPenanggungJawab = 'Nama penanggung jawab wajib diisi';
    if (!formData.teleponPenanggungJawab.trim()) newErrors.teleponPenanggungJawab = 'Telepon penanggung jawab wajib diisi';

    setErrors(newErrors);
    return Object.keys(newErrors).length === 0;
  };

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    if (validateForm()) {
      onSubmit(formData);
    }
  };

  const handleInputChange = (field: keyof typeof formData, value: string) => {
    setFormData(prev => ({ ...prev, [field]: value }));
    // Clear error when user starts typing
    if (errors[field]) {
      setErrors(prev => ({ ...prev, [field]: '' }));
    }
  };

  const handleFileUpload = (event: React.ChangeEvent<HTMLInputElement>) => {
    const file = event.target.files?.[0];
    if (file) {
      // In real app, would upload to server and get URL
      // For now, just store the file name
      handleInputChange('fotoRontgen', file.name);
      
      // Optional: Create a preview URL for display
      const reader = new FileReader();
      reader.onload = (e) => {
        // You can use this to show preview if needed
        console.log('File loaded:', e.target?.result);
      };
      reader.readAsDataURL(file);
    }
  };

  return (
    <div className="p-6">
      <Breadcrumb
        items={[
          { label: 'Dashboard', onClick: onNavigateToDashboard },
          { label: 'Data Pasien', onClick: onNavigateToPatients },
          { label: 'Tambah Pasien Baru', active: true }
        ]}
      />
      
      <h1 className="text-2xl font-bold text-gray-900 mb-6">Tambah Pasien Baru</h1>

      <div className="bg-white rounded-xl shadow-sm border border-gray-200">
        <form onSubmit={handleSubmit} className="p-6">
          <div className="grid grid-cols-1 lg:grid-cols-3 gap-8">
            {/* Data Pribadi */}
            <div className="space-y-4">
              <h3 className="text-lg font-semibold text-gray-900 mb-4">Data Pribadi</h3>
              
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-1">Nama Lengkap</label>
                <input
                  type="text"
                  value={formData.namaLengkap}
                  onChange={(e) => handleInputChange('namaLengkap', e.target.value)}
                  className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent ${
                    errors.namaLengkap ? 'border-red-300' : 'border-gray-300'
                  }`}
                  required
                />
                {errors.namaLengkap && (
                  <p className="mt-1 text-sm text-red-600">{errors.namaLengkap}</p>
                )}
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-1">Jenis Identitas</label>
                <select
                  value={formData.jenisIdentitas}
                  onChange={(e) => handleInputChange('jenisIdentitas', e.target.value)}
                  className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent ${
                    errors.jenisIdentitas ? 'border-red-300' : 'border-gray-300'
                  }`}
                  required
                >
                  <option value="">Pilih Jenis Identitas</option>
                  <option value="KTP">KTP</option>
                  <option value="SIM">SIM</option>
                  <option value="Passport">Passport</option>
                </select>
                {errors.jenisIdentitas && (
                  <p className="mt-1 text-sm text-red-600">{errors.jenisIdentitas}</p>
                )}
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-1">Nomor Identitas</label>
                <input
                  type="text"
                  value={formData.nomorIdentitas}
                  onChange={(e) => handleInputChange('nomorIdentitas', e.target.value)}
                  className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent ${
                    errors.nomorIdentitas ? 'border-red-300' : 'border-gray-300'
                  }`}
                  required
                />
                {errors.nomorIdentitas && (
                  <p className="mt-1 text-sm text-red-600">{errors.nomorIdentitas}</p>
                )}
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-1">Tempat Lahir</label>
                <input
                  type="text"
                  value={formData.tempatLahir}
                  onChange={(e) => handleInputChange('tempatLahir', e.target.value)}
                  className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent ${
                    errors.tempatLahir ? 'border-red-300' : 'border-gray-300'
                  }`}
                  required
                />
                {errors.tempatLahir && (
                  <p className="mt-1 text-sm text-red-600">{errors.tempatLahir}</p>
                )}
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-1">Tanggal Lahir</label>
                <input
                  type="date"
                  value={formData.tanggalLahir}
                  onChange={(e) => handleInputChange('tanggalLahir', e.target.value)}
                  className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent ${
                    errors.tanggalLahir ? 'border-red-300' : 'border-gray-300'
                  }`}
                  required
                />
                {errors.tanggalLahir && (
                  <p className="mt-1 text-sm text-red-600">{errors.tanggalLahir}</p>
                )}
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-1">Jenis Kelamin</label>
                <select
                  value={formData.jenisKelamin}
                  onChange={(e) => handleInputChange('jenisKelamin', e.target.value)}
                  className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent ${
                    errors.jenisKelamin ? 'border-red-300' : 'border-gray-300'
                  }`}
                  required
                >
                  <option value="">Pilih Jenis Kelamin</option>
                  <option value="Laki-laki">Laki-laki</option>
                  <option value="Perempuan">Perempuan</option>
                </select>
                {errors.jenisKelamin && (
                  <p className="mt-1 text-sm text-red-600">{errors.jenisKelamin}</p>
                )}
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-1">Golongan Darah</label>
                <select
                  value={formData.golonganDarah}
                  onChange={(e) => handleInputChange('golonganDarah', e.target.value)}
                  className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                >
                  <option value="">Pilih Golongan Darah</option>
                  <option value="A">A</option>
                  <option value="B">B</option>
                  <option value="AB">AB</option>
                  <option value="O">O</option>
                </select>
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-1">Status Perkawinan</label>
                <select
                  value={formData.statusPerkawinan}
                  onChange={(e) => handleInputChange('statusPerkawinan', e.target.value)}
                  className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                >
                  <option value="">Pilih Status Perkawinan</option>
                  <option value="Kawin">Kawin</option>
                  <option value="Belum Kawin">Belum Kawin</option>
                  <option value="Cerai">Cerai</option>
                </select>
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-1">Nama Suami</label>
                <input
                  type="text"
                  value={formData.namaSuami}
                  onChange={(e) => handleInputChange('namaSuami', e.target.value)}
                  className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                />
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-1">Nama Ibu</label>
                <input
                  type="text"
                  value={formData.namaIbu}
                  onChange={(e) => handleInputChange('namaIbu', e.target.value)}
                  className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent ${
                    errors.namaIbu ? 'border-red-300' : 'border-gray-300'
                  }`}
                  required
                />
                {errors.namaIbu && (
                  <p className="mt-1 text-sm text-red-600">{errors.namaIbu}</p>
                )}
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-1">Pendidikan</label>
                <select
                  value={formData.pendidikan}
                  onChange={(e) => handleInputChange('pendidikan', e.target.value)}
                  className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                >
                  <option value="">Pilih Pendidikan</option>
                  <option value="SD">SD</option>
                  <option value="SMP">SMP</option>
                  <option value="SMA">SMA</option>
                  <option value="D3">D3</option>
                  <option value="S1">S1</option>
                  <option value="S2">S2</option>
                  <option value="S3">S3</option>
                </select>
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-1">Pekerjaan</label>
                <select
                  value={formData.pekerjaan}
                  onChange={(e) => handleInputChange('pekerjaan', e.target.value)}
                  className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                >
                  <option value="">Pilih Pekerjaan</option>
                  <option value="PNS">PNS</option>
                  <option value="Swasta">Swasta</option>
                  <option value="Wiraswasta">Wiraswasta</option>
                  <option value="Mahasiswa">Mahasiswa</option>
                  <option value="Ibu Rumah Tangga">Ibu Rumah Tangga</option>
                  <option value="Pensiunan">Pensiunan</option>
                </select>
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-1">Kewarganegaraan</label>
                <select
                  value={formData.kewarganegaraan}
                  onChange={(e) => handleInputChange('kewarganegaraan', e.target.value)}
                  className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                >
                  <option value="">Pilih Kewarganegaraan</option>
                  <option value="Indonesia">Indonesia</option>
                  <option value="Asing">Asing</option>
                </select>
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-1">Agama</label>
                <select
                  value={formData.agama}
                  onChange={(e) => handleInputChange('agama', e.target.value)}
                  className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                >
                  <option value="">Pilih Agama</option>
                  <option value="Islam">Islam</option>
                  <option value="Kristen">Kristen</option>
                  <option value="Katolik">Katolik</option>
                  <option value="Hindu">Hindu</option>
                  <option value="Buddha">Buddha</option>
                  <option value="Konghucu">Konghucu</option>
                </select>
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-1">Suku</label>
                <input
                  type="text"
                  value={formData.suku}
                  onChange={(e) => handleInputChange('suku', e.target.value)}
                  className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                />
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-1">Bahasa</label>
                <input
                  type="text"
                  value={formData.bahasa}
                  onChange={(e) => handleInputChange('bahasa', e.target.value)}
                  className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                />
              </div>
            </div>

            {/* Alamat */}
            <div className="space-y-4">
              <h3 className="text-lg font-semibold text-gray-900 mb-4">Alamat</h3>
              
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-1">Alamat</label>
                <textarea
                  value={formData.alamat}
                  onChange={(e) => handleInputChange('alamat', e.target.value)}
                  rows={3}
                  className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent ${
                    errors.alamat ? 'border-red-300' : 'border-gray-300'
                  }`}
                  required
                />
                {errors.alamat && (
                  <p className="mt-1 text-sm text-red-600">{errors.alamat}</p>
                )}
              </div>

              <div className="grid grid-cols-2 gap-4">
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-1">RT</label>
                  <input
                    type="text"
                    value={formData.rt}
                    onChange={(e) => handleInputChange('rt', e.target.value)}
                    className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                  />
                </div>
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-1">RW</label>
                  <input
                    type="text"
                    value={formData.rw}
                    onChange={(e) => handleInputChange('rw', e.target.value)}
                    className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                  />
                </div>
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-1">Provinsi</label>
                <select
                  value={formData.provinsi}
                  onChange={(e) => handleInputChange('provinsi', e.target.value)}
                  className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                >
                  <option value="">Pilih Provinsi</option>
                  <option value="DKI Jakarta">DKI Jakarta</option>
                  <option value="Jawa Barat">Jawa Barat</option>
                  <option value="Jawa Tengah">Jawa Tengah</option>
                  <option value="Jawa Timur">Jawa Timur</option>
                  <option value="Banten">Banten</option>
                  <option value="Yogyakarta">Yogyakarta</option>
                </select>
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-1">Kabupaten/Kota</label>
                <select
                  value={formData.kabupaten}
                  onChange={(e) => handleInputChange('kabupaten', e.target.value)}
                  className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                >
                  <option value="">Pilih Kabupaten/Kota</option>
                  <option value="Jakarta Pusat">Jakarta Pusat</option>
                  <option value="Jakarta Utara">Jakarta Utara</option>
                  <option value="Jakarta Selatan">Jakarta Selatan</option>
                  <option value="Jakarta Barat">Jakarta Barat</option>
                  <option value="Jakarta Timur">Jakarta Timur</option>
                </select>
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-1">Kecamatan</label>
                <select
                  value={formData.kecamatan}
                  onChange={(e) => handleInputChange('kecamatan', e.target.value)}
                  className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                >
                  <option value="">Pilih Kecamatan</option>
                  <option value="Menteng">Menteng</option>
                  <option value="Gambir">Gambir</option>
                  <option value="Tanah Abang">Tanah Abang</option>
                </select>
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-1">Kelurahan</label>
                <select
                  value={formData.kelurahan}
                  onChange={(e) => handleInputChange('kelurahan', e.target.value)}
                  className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                >
                  <option value="">Pilih Kelurahan</option>
                  <option value="Menteng">Menteng</option>
                  <option value="Pegangsaan">Pegangsaan</option>
                  <option value="Cikini">Cikini</option>
                </select>
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-1">Kode Pos</label>
                <input
                  type="text"
                  value={formData.kodePos}
                  onChange={(e) => handleInputChange('kodePos', e.target.value)}
                  className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                />
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-1">Telepon</label>
                <input
                  type="tel"
                  value={formData.telepon}
                  onChange={(e) => handleInputChange('telepon', e.target.value)}
                  className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent ${
                    errors.telepon ? 'border-red-300' : 'border-gray-300'
                  }`}
                  required
                />
                {errors.telepon && (
                  <p className="mt-1 text-sm text-red-600">{errors.telepon}</p>
                )}
              </div>
            </div>

            {/* Penanggung Jawab Pasien */}
            <div className="space-y-4">
              <h3 className="text-lg font-semibold text-gray-900 mb-4">Penanggung Jawab Pasien</h3>
              
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-1">Hubungan dengan Pasien</label>
                <select
                  value={formData.hubunganPenanggungJawab}
                  onChange={(e) => handleInputChange('hubunganPenanggungJawab', e.target.value)}
                  className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent ${
                    errors.hubunganPenanggungJawab ? 'border-red-300' : 'border-gray-300'
                  }`}
                  required
                >
                  <option value="">Pilih Hubungan</option>
                  <option value="Orang Tua">Orang Tua</option>
                  <option value="Teman">Teman</option>
                  <option value="Tetangga">Tetangga</option>
                  <option value="Saudara Kandung">Saudara Kandung</option>
                  <option value="Saya Sendiri">Saya Sendiri</option>
                </select>
                {errors.hubunganPenanggungJawab && (
                  <p className="mt-1 text-sm text-red-600">{errors.hubunganPenanggungJawab}</p>
                )}
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-1">Nama</label>
                <input
                  type="text"
                  value={formData.namaPenanggungJawab}
                  onChange={(e) => handleInputChange('namaPenanggungJawab', e.target.value)}
                  className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent ${
                    errors.namaPenanggungJawab ? 'border-red-300' : 'border-gray-300'
                  }`}
                  required
                />
                {errors.namaPenanggungJawab && (
                  <p className="mt-1 text-sm text-red-600">{errors.namaPenanggungJawab}</p>
                )}
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-1">Telepon</label>
                <input
                  type="tel"
                  value={formData.teleponPenanggungJawab}
                  onChange={(e) => handleInputChange('teleponPenanggungJawab', e.target.value)}
                  className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent ${
                    errors.teleponPenanggungJawab ? 'border-red-300' : 'border-gray-300'
                  }`}
                  required
                />
                {errors.teleponPenanggungJawab && (
                  <p className="mt-1 text-sm text-red-600">{errors.teleponPenanggungJawab}</p>
                )}
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-1">Upload Gambar</label>
                <div 
                  className="border-2 border-dashed border-gray-300 rounded-lg p-6 text-center hover:border-gray-400 transition-colors cursor-pointer"
                  onClick={() => document.getElementById('file-upload')?.click()}
                >
                  <Upload className="w-8 h-8 text-gray-400 mx-auto mb-2" />
                  <p className="text-sm text-gray-600">Klik untuk upload foto hasil rontgen</p>
                  {formData.fotoRontgen && (
                    <p className="text-sm text-green-600 mt-2">File terpilih: {formData.fotoRontgen}</p>
                  )}
                  <input
                    id="file-upload"
                    type="file"
                    accept="image/*"
                    className="hidden"
                    onChange={handleFileUpload}
                  />
                </div>
              </div>
            </div>
          </div>

          <div className="flex justify-end space-x-4 mt-8 pt-6 border-t border-gray-200">
            <button
              type="button"
              onClick={onCancel}
              className="px-6 py-2 border border-gray-300 text-gray-700 rounded-lg font-medium hover:bg-gray-50 focus:ring-2 focus:ring-gray-500 focus:ring-offset-2 transition-colors"
            >
              Batal
            </button>
            <button
              type="submit"
              className="px-6 py-2 bg-green-600 text-white rounded-lg font-medium hover:bg-green-700 focus:ring-2 focus:ring-green-500 focus:ring-offset-2 transition-colors"
            >
              Simpan
            </button>
          </div>
        </form>
      </div>
    </div>
  );
};

export default PatientForm;